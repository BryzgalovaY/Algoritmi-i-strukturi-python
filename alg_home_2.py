__author__ = 'Брызгалова Юлия Викторовна'
print("Домашнее задание №2")
import random

#1. Написать программу, которая будет складывать, вычитать, умножать или делить два числа. Числа и знак операции вводятся пользователем. После выполнения вычисления программа не должна завершаться, а должна запрашивать новые данные для вычислений. Завершение программы должно выполняться при вводе символа '0' в качестве знака операции. Если пользователь вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и снова запрашивать знак операции. Также сообщать пользователю о невозможности деления на ноль, если он ввел 0 в качестве делителя.
print ("Задание №1")
def auto_result (a:int, b:int, znac:str):
    if znac == "+":
        result_ab = a + b
    elif znac == "-":
        result_ab = a - b
    elif znac == "*":
        result_ab = a * b
    elif znac == "/":
        if b == 0:
            result_ab = "Делитель не может быть равен 0, попробуйте снова"
        else:
            result_ab = a / b
    elif znac == "0":
        result_ab = "выход"
    else:
        result_ab = "Знак не определен, попробуйте снова"
    return result_ab

i = 1
while i != 0:
    a = int(input ("Введите первое число: "))
    b = int(input ("Введите второе число: "))
    znac = input ("Введите знак операции: ")
    otv = auto_result(a,b,znac)
    if otv == "выход":
        i = 0
    else:
        print("    Ответ: ", otv)
    print()



#2. Посчитать четные и нечетные цифры введенного натурального числа. Например, если введено число 34560, то у него 3 четные цифры (4, 6 и 0) и 2 нечетные (3 и 5).
print ()
print ("Задание №2")
a = input ("Введите число: ")
i = 0
x = 0
y = 0
for i in range(0,len(a),1):
    if int(a[i])%2 == 0:
        x += 1
    else:
        y += 1
print ("Четных чисел: ", x, " Нечетных чисел: ", y)

#3. Сформировать из введенного числа обратное по порядку входящих в него цифр и вывести на экран. Например, если введено число 3486, то надо вывести число 6843.
print ()
print ("Задание №3")
a = input ("Введите число: ")
#i = 0
b = ""
for i in range(len(a)-1,-1,-1):
    b = str(b) + str(a[i])
print ("Обратное число: ", b)

#4. Найти сумму n элементов следующего ряда чисел: 1 -0.5 0.25 -0.125 ...Количество элементов (n) вводится с клавиатуры.
print ()
print ("Задание №4")
n = input ("Введите количество элементов: ")
a = 1
b = 1
i = 0
for i in range(int(n)):
    b = (b/2)*-1
    a += b 
print (" Сумма n элементов = ", a)

#5. Вывести на экран коды и символы таблицы ASCII, начиная с символа под номером 32 и заканчивая 127-м включительно. Вывод выполнить в табличной форме: по десять пар "код-символ" в каждой строке.
print ()
print ("Задание №5")
for i in range(32,128):
    print("%4d-%s" % (i,chr(i)), end='')
    if (i-31)%10 == 0:
        print()
 
print()


#6. В программе генерируется случайное целое число от 0 до 100. Пользователь должен его отгадать не более чем за 10 попыток. После каждой неудачной попытки должно сообщаться больше или меньше введенное пользователем число, чем то, что загадано. Если за 10 попыток число не отгадано, то вывести загаданное число.
print ()
print ("Задание №6")
a = random.randint(0,100)
for i in range(10):
    b = int(input("Угадайте число: "))
    if a == b:
        print ("Поздравляем, Вы угадали число.")
        break
    elif a > b:
        print ("Загаданное число больше чем то, которое вы подумали. Попробуйте снова, у вас еще ", (9-i), "попыток")
        if (9-i) == 0:
            print("К сожалению вы не угадали загаданное число. Было загадано число: ", a)
    elif a < b:
        print ("Загаданное число меньше чем то, которое вы подумали. Попробуйте снова, у вас еще ", (9-i), "попыток")
        if (9-i) == 0:
            print("К сожалению вы не угадали загаданное число. Было загадано число: ", a)
#7. Напишите программу, доказывающую или проверяющую, что для множества натуральных чисел выполняется равенство: 1+2+...+n = n(n+1)/2, где n - любое натуральное число.
print ()
print ("Задание №7")
nn = int(input ("Введите натуральное число: "))
n = float(nn)
x = 0
for i in range(nn):
    if i != nn - 1:
        x += 1
    else:
        b = float(nn + x)
if (b+1) == n*(n+1)/2:
    print ("Равеноство 1+2+...+n = n(n+1)/2 выполняется")
else:
    print ("Равенство 1+2+...+n = n(n+1)/2 не выполняется")
	
#8. Посчитать, сколько раз встречается определенная цифра в введенной последовательности чисел. Количество вводимых чисел и цифра, которую необходимо посчитать, задаются вводом с клавиатуры.
print ()
print ("Задание №8")
a = input("Введите какую цифру будем искать: ")
b = int(input("Введите сколько будет последовательностей чисел: "))
m = []
col = 0
for i in range(b):
    m.append(random.randint(0,100))

for i in range(b):
    bb = str(m[i])
    for n in range(len(bb)):
        if a == bb[n]:
            col += 1
print (col, " --- количество раз, сколько цифра ", a, ", встречается в последовательноси ", m)      



#9. Среди натуральных чисел, которые были введены, найти наибольшее по сумме цифр. Вывести на экран это число и сумму его цифр.
print ()
print ("Задание №9")
a = random.randint(0,10)
m = []
m2 = []
summa = 0
for i in range(a):
    m.append(random.randint(0,100))

for i in range(a):
    bb = str(m[i])
    summa = 0
    for n in range(len(bb)):
        summa = summa + int(bb[n])
    m2.append(summa)
print("Число, с наибольшей суммой цифр: ", m[m2.index(max(m2))])


print ("Последовательность: ", m)
print ("Сумма цифр в числах последовательности: ", m2)

